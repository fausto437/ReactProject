[{"C:\\Users\\DELL\\OneDrive\\Documentos\\Personal\\reactTest\\login_react\\src\\index.js":"1","C:\\Users\\DELL\\OneDrive\\Documentos\\Personal\\reactTest\\login_react\\src\\App.js":"2","C:\\Users\\DELL\\OneDrive\\Documentos\\Personal\\reactTest\\login_react\\src\\reportWebVitals.js":"3","C:\\Users\\DELL\\OneDrive\\Documentos\\Personal\\reactTest\\login_react\\src\\components\\Login.jsx":"4","C:\\Users\\DELL\\OneDrive\\Documentos\\Personal\\reactTest\\login_react\\src\\components\\Menu.jsx":"5","C:\\Users\\DELL\\OneDrive\\Documentos\\Personal\\reactTest\\login_react\\src\\components\\UserInfo.jsx":"6","C:\\Users\\DELL\\OneDrive\\Documentos\\Personal\\reactTest\\login_react\\src\\components\\List.jsx":"7"},{"size":535,"mtime":1659733224626,"results":"8","hashOfConfig":"9"},{"size":404,"mtime":1659743040039,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1659733224750,"results":"11","hashOfConfig":"9"},{"size":2682,"mtime":1659986803827,"results":"12","hashOfConfig":"9"},{"size":1825,"mtime":1660068859074,"results":"13","hashOfConfig":"9"},{"size":5079,"mtime":1660098000711,"results":"14","hashOfConfig":"9"},{"size":6198,"mtime":1660096645640,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1yivzug",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"19"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"19"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"19"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"C:\\Users\\DELL\\OneDrive\\Documentos\\Personal\\reactTest\\login_react\\src\\index.js",[],[],[],"C:\\Users\\DELL\\OneDrive\\Documentos\\Personal\\reactTest\\login_react\\src\\App.js",["43"],[],"import logo from './logo.svg';\nimport './App.css';\nimport {Login} from './components/Login';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <BrowserRouter>\n            <Routes>\n                <Route exact path='/' element={<Login/>}/>\n            </Routes>\n        </BrowserRouter>\n    </div>\n    );\n}\n\nexport default App;\n","C:\\Users\\DELL\\OneDrive\\Documentos\\Personal\\reactTest\\login_react\\src\\reportWebVitals.js",[],[],"C:\\Users\\DELL\\OneDrive\\Documentos\\Personal\\reactTest\\login_react\\src\\components\\Login.jsx",["44","45","46","47"],[],"import React, { useState } from \"react\";\r\nimport { Menu } from \"./Menu\";\r\nimport $ from \"jquery\";\r\n\r\nexport const Login = () => {\r\n  const [loginStatus, setLoginStatus] = useState(\"false\");\r\n  const [usr, setUsr] = useState(\"\");\r\n  const [pss, setPass] = useState(\"\");\r\n  \r\n\r\n  function loginFn(e) {\r\n    e.preventDefault();\r\n    \r\n    var ustTxtStr = document.getElementById(\"usrTxt\").value;\r\n    var passTxtStr = document.getElementById(\"passTxt\").value;\r\n    //Se valida que se envíe usuario y contraseña\r\n    if (ustTxtStr.length == 0 || passTxtStr.length == 0) {\r\n      alert(\"Se requiere ingresar los datos de usuario y contraseña\");\r\n    } else {\r\n      //Se valida en la base\r\n      $.ajax({\r\n        cache: false,\r\n        type: \"GET\",\r\n        url:\r\n          \"https://localhost:44323/Users/GetUser?usr=\" +\r\n          ustTxtStr +\r\n          \"&pss=\" +\r\n          passTxtStr,\r\n        success: function (data, textStatus, jqXHR) {\r\n          //Si es correcto se muestra el menú\r\n          if (data != 0) {\r\n            setUsr(data);\r\n            setLoginStatus(\"true\");\r\n            document.getElementById(\"formLogin\").style.display = \"none\";\r\n            document.getElementById(\"div-menu\").style.display = \"block\";\r\n          }\r\n          //Si NO es correcto se muestra msj de error\r\n          else {\r\n            alert(\"Los datos ingresados son incorrectos.\");\r\n            setLoginStatus(\"false\");\r\n          }\r\n        },\r\n        error: function (jqXHR, textStatus, errorThrown) {\r\n          alert(\"Los datos ingresados son incorrectos.\");\r\n          setLoginStatus(\"false\");\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form id=\"formLogin\">\r\n        <div className=\"container\">\r\n          <div>\r\n            <label htmlFor=\"\">Usuario</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"\"\r\n              id=\"usrTxt\"\r\n              placeholder=\"\"\r\n              onChange={(e) => setUsr(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Contraseña</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              name=\"\"\r\n              id=\"passTxt\"\r\n              placeholder=\"\"\r\n              onChange={(e) => setPass(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\" onClick={loginFn}>\r\n            Conectar\r\n          </button>\r\n        </div>\r\n      </form>\r\n      {loginStatus === \"true\" ? <Menu userId={usr} /> : \"\"}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\DELL\\OneDrive\\Documentos\\Personal\\reactTest\\login_react\\src\\components\\Menu.jsx",["48","49","50"],[],"import React, { useState } from \"react\";\r\nimport {NavLink} from \"react-router-dom\"\r\nimport { UserInfo } from \"./UserInfo\";\r\nimport {List} from \"./List\";\r\n\r\nexport const Menu = (props) =>{\r\n\r\nconst [userId, setUserId] = useState(props.userId);\r\nconst [userInf, setUserInf] = useState(\"\");\r\nconst [lst, setLst] = useState(\"\");\r\n\r\nfunction cerrarSesion(){\r\ndocument.getElementById(\"div-menu\").style.display = \"none\";\r\ndocument.getElementById(\"formLogin\").style.display = \"block\";\r\ndocument.getElementById(\"usrTxt\").value = \"\";\r\ndocument.getElementById(\"passTxt\").value= \"\";\r\n}\r\n\r\nfunction goToAddress(){\r\nsetUserInf(\"true\");\r\nsetLst(\"false\");\r\n}\r\n\r\nfunction goToList(){\r\nsetUserInf(\"false\");\r\nsetLst(\"true\");\r\n}\r\n    return (\r\n<div id=\"div-menu\">\r\n<nav className=\"navbar navbar-expand-lg bg-light\">\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">Inicio</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <NavLink to=\"\" className=\"nav-link\" onClick={goToList}>Listas</NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink to=\"\" className=\"nav-link\" onClick={goToAddress}>Direcci&oacute;n</NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" aria-current=\"page\" href=\"#\" onClick={cerrarSesion}>Cerrar sesión</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n{userInf===\"true\" && <UserInfo userId={userId}/>}\r\n{lst===\"true\" && <List userId={userId}/>}\r\n</div>\r\n)\r\n}","C:\\Users\\DELL\\OneDrive\\Documentos\\Personal\\reactTest\\login_react\\src\\components\\UserInfo.jsx",["51","52","53","54","55","56","57"],[],"import React, { useState, useEffect } from \"react\";\r\nimport $ from \"jquery\";\r\n\r\nexport const UserInfo = (props) => {\r\n  const [userId, setUserId] = useState(props.userId);\r\n  const [Id, setId] = useState(1);\r\n  const [address, setAddress] = useState(\"\");\r\n  const [City, setCity] = useState(\"\");\r\n  const [Country, setCountry] = useState(\"\");\r\n  const [Phone, setPhone] = useState(\"\");\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [Picture, setPicture] = useState(null);\r\n  const [PictureB, setPictureB] = useState(null);\r\n\r\n  const getUserInfo = () => {\r\n    $.ajax({\r\n      cache: false,\r\n      type: \"GET\",\r\n      url: \"https://localhost:44323/Users/GetUserAddress?userId=\" + userId,\r\n      success: function (data, textStatus, jqXHR) {\r\n        var ob = JSON.parse(data);\r\n        setAddress(ob.address);\r\n        setCity(ob.City);\r\n        setCountry(ob.Country);\r\n        setPhone(ob.Phone);\r\n        setEmail(ob.Email);\r\n        if (ob.Picture != null) setPictureB(ob.Picture);\r\n        return ob;\r\n      },\r\n      error: function (jqXHR, textStatus, errorThrown) {\r\n        return \"\";\r\n      },\r\n    });\r\n  };\r\n  const [userInfo, setUserInfo] = useState(getUserInfo);\r\n  const guardarCambios = (e) => {\r\n    e.preventDefault();\r\n    var body = { Id, address, City, Country, Phone, Email, Picture };\r\n    var form = new FormData();\r\n    form.append(\"Id\", Id);\r\n    form.append(\"address\", address);\r\n    form.append(\"City\", City);\r\n    form.append(\"Country\", Country);\r\n    form.append(\"Phone\", Phone);\r\n    form.append(\"Email\", Email);\r\n    form.append(\"Picture\", Picture);\r\n    $.ajax({\r\n      cache: false,\r\n      type: \"POST\",\r\n      url: \"https://localhost:44323/Users/UpdateUserAddress\",\r\n      processData: false,\r\n      mimeType: \"multipart/form-data\",\r\n      contentType: false,\r\n      data: form,\r\n      success: function (data, textStatus, jqXHR) {\r\n        getUserInfo();\r\n      },\r\n      error: function (jqXHR, textStatus, errorThrown) {\r\n        console.log(textStatus);\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const [f] = e.target.files;\r\n    setPicture(f);\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"\" onSubmit={guardarCambios}>\r\n        <div className=\"row\">\r\n          <div className=\"col-3\">\r\n            <label htmlFor=\"addressTxt\" className=\"form-control-plaintext\">\r\n              Dirección\r\n            </label>\r\n            <label htmlFor=\"cityTxt\" className=\"form-control-plaintext\">\r\n              Ciudad\r\n            </label>\r\n            <label htmlFor=\"countryTxt\" className=\"form-control-plaintext\">\r\n              País\r\n            </label>\r\n            <label htmlFor=\"phoneTxt\" className=\"form-control-plaintext\">\r\n              Teléfono\r\n            </label>\r\n            <label htmlFor=\"emailTxt\" className=\"form-control-plaintext\">\r\n              Correo\r\n            </label>\r\n            <label htmlFor=\"picValue\" className=\"form-control-plaintext\">\r\n              Imágen de perfil\r\n            </label>\r\n          </div>\r\n          <div className=\"col-9\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"addressTxt\"\r\n              value={address}\r\n              placeholder=\"Dirección\"\r\n              onChange={(e) => setAddress(e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"cityTxt\"\r\n              placeholder=\"Ciudad\"\r\n              value={City}\r\n              onChange={(e) => setCity(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"countryTxt\"\r\n              placeholder=\"País\"\r\n              value={Country}\r\n              onChange={(e) => setCountry(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"phoneTxt\"\r\n              placeholder=\"Teléfono\"\r\n              maxLength={10}\r\n              value={Phone}\r\n              onChange={(e) => setPhone(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"emailTxt\"\r\n              placeholder=\"Correo\"\r\n              value={Email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              id=\"picValue\"\r\n              onChange={handleChange}\r\n              multiple={false}\r\n              accept=\".jpeg, .jpg\"\r\n            />\r\n            {PictureB !=null ? (\r\n              <img src={`data:image/jpeg;base64,${PictureB}`} width=\"200\" />\r\n            ) : (\r\n              <p>No se ha cargado imagen.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-auto\">\r\n          <button type=\"submit\" className=\"btn btn-primary mb-3\">\r\n            Guardar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\DELL\\OneDrive\\Documentos\\Personal\\reactTest\\login_react\\src\\components\\List.jsx",["58","59","60","61","62","63","64","65","66"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport $ from \"jquery\";\r\nimport { useMemo } from \"react\";\r\n\r\nexport const List = (props, {}) => {\r\n  const [userId, setUserId] = useState(props.userId);\r\n  const [registers, setRegisters] = useState(null);\r\nconst [field, setField] = useState(null);\r\n\r\n  const getRegisterInfo = () => {\r\n    $.ajax({\r\n      cache: false,\r\n      type: \"GET\",\r\n      url: \"https://localhost:44323/Users/GetUserList?userId=\" + userId,\r\n      success: function (data, textStatus, jqXHR) {\r\n        var elementList = JSON.parse(data);\r\n        if (elementList.Elements == null) {\r\n          elementList.Elements = [];\r\n        }\r\n        setRegisters(elementList);\r\n        return elementList;\r\n      },\r\n      error: function (jqXHR, textStatus, errorThrown) {\r\n        return null;\r\n      },\r\n    });\r\n  };\r\n\r\n  const [list, setList] = useState(getRegisterInfo);\r\n\r\n  const deleteRegister = (registerId) => {\r\n    if (window.confirm(\"¿Seguro que desea eliminar el registro?\")) {\r\n      $.ajax({\r\n        cache: false,\r\n        type: \"DELETE\",\r\n        url:\r\n          \"https://localhost:44323/Users/DeleteElementToList?idElement=\" +\r\n          registerId,\r\n        success: function (data, textStatus, jqXHR) {\r\n          getRegisterInfo();\r\n        },\r\n        error: function (jqXHR, textStatus, errorThrown) {\r\n          return null;\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const saveRegister = () => {\r\n    var newElementName = $(\"#register-name\").val();\r\n    if (newElementName == \"\") {\r\n      alert(\"Debe ingresar un nombre.\");\r\n      return;\r\n    }\r\n    var objRegister = {\r\n      listId: registers.Id,\r\n      elementName: newElementName,\r\n    };\r\n    $.ajax({\r\n      cache: false,\r\n      type: \"POST\",\r\n      url: \"https://localhost:44323/Users/InsertElementToList\",\r\n      data: JSON.stringify(objRegister),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      dataType: \"json\",\r\n      success: function (data, textStatus, jqXHR) {\r\n$(\"#register-name\").val(\"\");\r\n        getRegisterInfo();\r\n      },\r\n      error: function (jqXHR, textStatus, errorThrown) {\r\n        return null;\r\n      },\r\n    });\r\n  };\r\n\r\n\r\nconst setSortedField = useMemo((op)=>{\r\nif(!field) return registers;\r\nif(field===\"firstName\")\r\nreturn registers.Elements.sort((a, b) => {\r\n    let fa = a.ElementName.toLowerCase(),\r\n        fb = b.ElementName.toLowerCase();\r\n\r\n    if (fa < fb) {\r\n        return -1;\r\n    }\r\n    if (fa > fb) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n})\r\n\r\nif(field===\"number\")\r\nreturn registers.Elements.sort((a, b) => {\r\n    return a.Id - b.Id;\r\n})\r\n\r\n}, [ registers, field]);\r\n  return (\r\n    <div className=\"container\">\r\n      <div>\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#addRegister\"\r\n        >\r\n          <FontAwesomeIcon icon={faPlus} /> Agregar elemento\r\n        </button>\r\n      </div>\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\"><a href=\"#\" onClick={() => setField(\"number\")}>#</a></th>\r\n              <th scope=\"col\"><a href=\"#\" onClick={() => setField(\"firstName\")}>\r\n              Nombre\r\n            </a></th>\r\n              <th scope=\"col\">Eliminar</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {registers !== null ? (\r\n              registers.Elements.length > 0 ? (\r\n                registers.Elements.map((registro, index) => (\r\n                  <tr key={index}>\r\n                    <th>{registro.Id}</th>\r\n                    <td>{registro.ElementName}</td>\r\n                    <td className=\"text-center\">\r\n                      <button\r\n                        className=\"btn btn-default\"\r\n                        onClick={() => deleteRegister(registro.Id)}\r\n                      >\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <td colspan=\"3\">No hay registros en la lista</td>\r\n              )\r\n            ) : (\r\n              <td colspan=\"3\">No hay registros en la lista</td>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"addRegister\"\r\n        tabindex=\"-1\"\r\n        aria-labelledby=\"addRegisterLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                Agregar elemento\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                  <label htmlFor=\"register-name\" className=\"col-form-label\">\r\n                    Nombre:\r\n                  </label>\r\n                </div>\r\n                <div className=\"col-9\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"register-name\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-bs-dismiss=\"modal\"\r\n              >\r\n                Cerrar\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\ndata-bs-dismiss=\"modal\"\r\n                onClick={() => saveRegister()}\r\n              >\r\n                Guardar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n",{"ruleId":"67","severity":1,"message":"68","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":12},{"ruleId":"67","severity":1,"message":"71","line":8,"column":10,"nodeType":"69","messageId":"70","endLine":8,"endColumn":13},{"ruleId":"72","severity":1,"message":"73","line":17,"column":26,"nodeType":"74","messageId":"75","endLine":17,"endColumn":28},{"ruleId":"72","severity":1,"message":"73","line":17,"column":52,"nodeType":"74","messageId":"75","endLine":17,"endColumn":54},{"ruleId":"72","severity":1,"message":"76","line":31,"column":20,"nodeType":"74","messageId":"75","endLine":31,"endColumn":22},{"ruleId":"67","severity":1,"message":"77","line":8,"column":16,"nodeType":"69","messageId":"70","endLine":8,"endColumn":25},{"ruleId":"78","severity":1,"message":"79","line":32,"column":5,"nodeType":"80","endLine":32,"endColumn":42},{"ruleId":"78","severity":1,"message":"79","line":45,"column":11,"nodeType":"80","endLine":45,"endColumn":87},{"ruleId":"67","severity":1,"message":"81","line":1,"column":27,"nodeType":"69","messageId":"70","endLine":1,"endColumn":36},{"ruleId":"67","severity":1,"message":"77","line":5,"column":18,"nodeType":"69","messageId":"70","endLine":5,"endColumn":27},{"ruleId":"67","severity":1,"message":"82","line":6,"column":14,"nodeType":"69","messageId":"70","endLine":6,"endColumn":19},{"ruleId":"67","severity":1,"message":"83","line":35,"column":10,"nodeType":"69","messageId":"70","endLine":35,"endColumn":18},{"ruleId":"67","severity":1,"message":"84","line":35,"column":20,"nodeType":"69","messageId":"70","endLine":35,"endColumn":31},{"ruleId":"67","severity":1,"message":"85","line":38,"column":9,"nodeType":"69","messageId":"70","endLine":38,"endColumn":13},{"ruleId":"86","severity":1,"message":"87","line":144,"column":15,"nodeType":"80","endLine":144,"endColumn":77},{"ruleId":"67","severity":1,"message":"81","line":1,"column":27,"nodeType":"69","messageId":"70","endLine":1,"endColumn":36},{"ruleId":"88","severity":1,"message":"89","line":7,"column":29,"nodeType":"90","messageId":"75","endLine":7,"endColumn":31},{"ruleId":"67","severity":1,"message":"77","line":8,"column":18,"nodeType":"69","messageId":"70","endLine":8,"endColumn":27},{"ruleId":"67","severity":1,"message":"91","line":31,"column":10,"nodeType":"69","messageId":"70","endLine":31,"endColumn":14},{"ruleId":"67","severity":1,"message":"92","line":31,"column":16,"nodeType":"69","messageId":"70","endLine":31,"endColumn":23},{"ruleId":"72","severity":1,"message":"73","line":53,"column":24,"nodeType":"74","messageId":"75","endLine":53,"endColumn":26},{"ruleId":"67","severity":1,"message":"93","line":79,"column":7,"nodeType":"69","messageId":"70","endLine":79,"endColumn":21},{"ruleId":"78","severity":1,"message":"79","line":116,"column":31,"nodeType":"80","endLine":116,"endColumn":78},{"ruleId":"78","severity":1,"message":"79","line":117,"column":31,"nodeType":"80","endLine":117,"endColumn":81},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'pss' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'setUserId' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'setId' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'setUserInfo' is assigned a value but never used.","'body' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'list' is assigned a value but never used.","'setList' is assigned a value but never used.","'setSortedField' is assigned a value but never used."]